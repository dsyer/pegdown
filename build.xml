<?xml version="1.0" encoding="UTF-8"?>

<project name="pegdown" default="compile.main" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <!-- can be overridden at the command line with -Dversion= -->
    <property name="version" value="snapshot"/>

    <path id="compile.classpath">
        <pathelement location="lib/jtidy/jtidy-r938.jar"/>
        <pathelement location="lib/parboiled/parboiled4j-snapshot.jar"/>
        <pathelement location="lib/testng/testng-5.10-jdk15.jar"/>
    </path>

    <taskdef resource="testngtasks" classpath="lib/testng/testng-5.10-jdk15.jar;"/>

    <target name="clean" description="Remove all generated files">
        <delete dir="build"/>
    </target>

    <target name="compile.main" description="Compile main sources">
        <mkdir dir="build/main"/>
        <javac debug="on" destdir="build/main" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="src"/>
            <classpath refid="compile.classpath"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javac>
    </target>

    <target name="compile.tests" depends="compile.main" description="Compile test sources">
        <mkdir dir="build/tests"/>
        <javac debug="on" destdir="build/tests" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="test"/>
            <classpath refid="compile.classpath"/>
            <classpath location="build/main"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javac>
        <copy toDir="build/tests">
            <fileset dir="test-cases"/>
        </copy>
    </target>

    <target name="test" depends="compile.tests" description="Run all tests">
        <testng parallel="true" suitename="All Tests" outputdir="test-output" haltonfailure="true">
            <classfileset dir="build/tests" includes="**/*Test.class"/>
            <classpath refid="compile.classpath"/>
            <classpath location="build/main"/>
            <classpath location="build/tests"/>
        </testng>
    </target>

    <target name="javadoc" description="Builds javadoc">
        <mkdir dir="build/javadoc"/>
        <javadoc destdir="build/javadoc" windowtitle="pegdown ${version} API">
            <packageset dir="src" defaultexcludes="yes">
                <include name="org/pegdown/**"/>
                <exclude name="org/pegdown/ast/**"/>
            </packageset>
            <classpath refid="compile.classpath"/>
            <link href="http://java.sun.com/javase/6/docs/api"/>
        </javadoc>
    </target>

    <target name="manifest">
        <copy file="LICENSE" todir="build/manifest/META-INF"/>
        <copy file="NOTICE" todir="build/manifest/META-INF"/>
        <manifest file="build/manifest/META-INF/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Specification-Title" value="pegdown"/>
            <attribute name="Specification-Version" value="${version}"/>
            <attribute name="Specification-Vendor" value="pegdown.org"/>
            <attribute name="Implementation-Title" value="pegdown"/>
            <attribute name="Implementation-Version" value="${version}"/>
            <attribute name="Implementation-Vendor" value="pegdown.org"/>
            <attribute name="Bundle-License" value="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
            <attribute name="Bundle-Version" value="${version}"/>
            <attribute name="Bundle-Description"
                       value="pegdown, a Java 1.5+ library providing a clean and lightweight markdown processor"/>
            <attribute name="Bundle-Name" value="pegdown"/>
            <attribute name="Bundle-DocURL" value="http://www.pegdown.org"/>
            <attribute name="Bundle-Vendor" value="pegdown.org"/>
            <attribute name="Bundle-SymbolicName" value="org.pegdown"/>
        </manifest>
    </target>

    <target name="jar" depends="compile.main, manifest" description="Build main library JAR">
        <jar destfile="build/pegdown-${version}.jar" manifest="build/manifest/META-INF/MANIFEST.MF">
            <fileset dir="build/main"/>
            <fileset dir="build/manifest"/>
        </jar>
    </target>

    <target name="testjar" depends="compile.tests, jar" description="Run all tests against the library jar">
        <testng verbose="2" parallel="true" suitename="All Tests" outputdir="test-output" haltonfailure="true">
            <classfileset dir="build/tests" includes="**/*Test.class"/>
            <classpath location="build/pegdown-${version}.jar"/>
            <classpath refid="compile.classpath"/>
            <classpath location="build/tests"/>
        </testng>
    </target>

    <target name="jar.source" depends="manifest" description="Create a JAR with main sources">
        <zip destfile="build/pegdown-${version}-src.jar">
            <fileset dir="src"/>
            <fileset dir="build/manifest"/>
        </zip>
    </target>

    <target name="jar.javadoc" depends="javadoc" description="Creates a JAR containing javadocs">
        <zip destfile="build/pegdown-${version}-javadoc.jar">
            <fileset dir="build/javadoc"/>
        </zip>
    </target>

    <target name="dist" depends="clean, test, testjar, jar.source, jar.javadoc"
            description="Compiles, tests and jars everything">
    </target>

	<path id="maven-ant-tasks.classpath" path="lib/maven/maven-ant-tasks-2.1.1.jar" />

	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
	      uri="antlib:org.apache.maven.artifact.ant"
	      classpathref="maven-ant-tasks.classpath" />

	<target name="maven-bundle" depends="jar,jar.javadoc,jar.source" description="This creates a bundle to upload to the central maven repo">
	    <mkdir dir="build/maven"/>
	    <copy file="build/pegdown-${version}.jar"
	          tofile="build/maven/pegdown-${version}.jar"/>
		<copy file="build/pegdown-${version}-src.jar" tofile="build/maven/pegdown-${version}-sources.jar"/>
		<copy file="build/pegdown-${version}-javadoc.jar" tofile="build/maven/pegdown-${version}-javadoc.jar"/>
	    <copy file="pom.xml" tofile="build/maven/pegdown-${version}.pom"/>
	    <replace file="build/maven/pegdown-${version}.pom"
	             token="VERSION" value="${version}"/>
	</target>

	<target name="maven-deploy" depends="maven-bundle" description="This installs a maven bundle locally and also deploys it to a local directory (build/repository) with all required metadate.">
	    <artifact:pom id="pom" file="build/maven/pegdown-${version}.pom" />
	    <artifact:install file="build/maven/pegdown-${version}.jar">
	      <pom refid="pom"/>
		  <attach file="build/maven/pegdown-${version}-sources.jar" classifier="sources"/>
	    </artifact:install>
	    <artifact:deploy file="build/maven/pegdown-${version}.jar">
	      <remoteRepository url="file://${user.dir}/build/repository"/>
	      <pom refid="pom"/>
		  <attach file="build/maven/pegdown-${version}-sources.jar" classifier="sources"/>
	    </artifact:deploy>
	</target>

</project>